@charset 'UTF-8';

/* FUNCTIONS */

@function str-replace($haystack, $needle, $replace-txt) {
    $index: str-index($haystack, $needle);
    @if $index {
        @return str-slice($haystack, 1, $index - 1) + $replace-txt
              + str-replace(str-slice($haystack, $index + str-length($needle)), $needle, $replace-txt);
    }
    @return $haystack;
}

/* FONTS */

@font-face {
    font-family: 'Eurostile Extended Black';
    src: local('Eurostile Extended Black'), local('EurostileExtendedBlack'),
         url('../../fonts/eurostile-extended-black/EurostileExtendedBlack.otf') format('opentype'),
         url('../../fonts/eurostile-extended-black/EurostileExtendedBlack.ttf') format('truetype'),
         url('../../fonts/eurostile-extended-black/EurostileExtendedBlack.woff') format('woff'),
         url('../../fonts/eurostile-extended-black/EurostileExtendedBlack.woff2') format('woff2');
}
@font-face {
    font-family: 'Major Mono Display';
    src: local('Major Mono Display'), local('MajorMonoDisplay-Regular'),
         url('../../fonts/major-mono-display/MajorMonoDisplay-Regular.otf') format('opentype'),
         url('../../fonts/major-mono-display/MajorMonoDisplay-Regular.ttf') format('truetype'),
         url('../../fonts/major-mono-display/MajorMonoDisplay-Regular.woff') format('woff'),
         url('../../fonts/major-mono-display/MajorMonoDisplay-Regular.woff2') format('woff2');
}
@font-face{
    font-family: 'PolySans Neutral';
    src: local('PolySans Neutral'), local('PolySansNeutral-Regular'),
         url('../../fonts/polysans-neutral/PolySansNeutral.eot?#iefix') format('embedded-opentype'),
         url('../../fonts/polysans-neutral/PolySansNeutral.woff') format('woff'),
         url('../../fonts/polysans-neutral/PolySansNeutral.woff2') format('woff2'),
         url('../../fonts/polysans-neutral/PolySansNeutral.ttf') format('truetype');
    font-weight:normal; font-style:normal; font-display:swap;
}
$font-families: (
    'IBM Plex Mono': (
        ('IBMPlexMono-Thin', 100, normal),
        ('IBMPlexMono-ThinItalic', 100, italic),
        ('IBMPlexMono-ExtraLight', 200, normal),
        ('IBMPlexMono-ExtraLightItalic', 200, italic),
        ('IBMPlexMono-Light', 300, normal),
        ('IBMPlexMono-LightItalic', 300, italic),
        ('IBMPlexMono-Regular', 400, normal),
        ('IBMPlexMono-RegularItalic', 400, italic),
        ('IBMPlexMono-Medium', 500, normal),
        ('IBMPlexMono-MediumItalic', 500, italic),
        ('IBMPlexMono-SemiBold', 600, normal),
        ('IBMPlexMono-SemiBoldItalic', 600, italic),
        ('IBMPlexMono-Bold', 700, normal),
        ('IBMPlexMono-BoldItalic', 700, italic)
    )
);
@mixin font-face($font-family, $full-name, $postscript-name, $font-weight, $font-style) {
    $font-family-dashed: to-lower-case(str-replace($font-family, ' ', '-'));
    @font-face {
        font-family: $font-family;
        src:
            local('#{$full-name}'), local('#{$postscript-name}'),
            url('../../fonts/#{$font-family-dashed}/otf/#{$postscript-name}.otf') format('opentype'),
            url('../../fonts/#{$font-family-dashed}/ttf/#{$postscript-name}.ttf') format('truetype'),
            url('../../fonts/#{$font-family-dashed}/woff/#{$postscript-name}.woff') format('woff'),
            url('../../fonts/#{$font-family-dashed}/woff2/#{$postscript-name}.woff2') format('woff2');
        font-weight: $font-weight; font-style: $font-style;
    }
}
@each $font-family, $variations in $font-families {
    @each $variation in $variations {

        // Extract elements
        $postscript-name: nth($variation, 1); $font-weight: nth($variation, 2); $font-style: nth($variation, 3);

        // Generate full name (w/ style) for 1st `local()`
        $full-name: '#{$font-family}';
        $style: str-slice($postscript-name, str-index($postscript-name, '-') + 1);
        @if $style != 'Regular' { // insert spaces

            // Find indices of uppercase letters
            $upper-indices: ();
            @for $i from 2 through str-length($style) { // start at 2 since 1st char is irrelevant to spacing
                $char: str-slice($style, $i, $i);
                @if $char == to-upper-case($char) { $upper-indices: append($upper-indices, $i); }
            }

            // Insert spaces if needed
            @if length($upper-indices) > 0 {
                $offset: 0;
                @each $index in $upper-indices {
                    $index: $index + $offset; // since each iteration increases length +1
                    $style: str-insert($style, ' ', $index); // insert the space
                    $offset: $offset + 1;
                }
            }

            $full-name: '#{$font-family} #{$style}';
        }

        @include font-face($font-family, $full-name, $postscript-name, $font-weight, $font-style);
    }
}

/* VARIABLES */

$green: lime; $blue: #64ffff; $kudo-depth: .225vw;
$no-select: (
    -webkit-user-select: none !important, -khtml-user-select: none !important,
    -moz-user-select: none !important, -ms-user-select: none !important,
    user-select: none !important );
$no-touch-select: (
    -webkit-touch-callout: none !important, -webkit-tap-highlight-color: transparent );

/* GENERAL */

.app-nav a.active { border-bottom: 2px solid $green}
a { word-break: break-word }
.top-gradient { /* for Star Wars effect (from `../../js/onload-hacks.js`) */
    position: fixed ; top: 0 ; left: 0 ; width: 100% ; height: 20vh ;
    background-image: linear-gradient(to top, transparent, #000) ;
    pointer-events: none ; z-index: 1 }

/* Scrollbar */
* { scrollbar-color: rgb(210, 210, 210) #1a1a1a ; scrollbar-width: thin } /* Firefox */
::-webkit-scrollbar { width: 10px ; height: 10px } /* Chromium/Safari */
::-webkit-scrollbar-thumb { background: white ; border-radius: 4px ; border: 1px black solid }
::-webkit-scrollbar-thumb:hover { background: rgb(210, 210, 210) }
::-webkit-scrollbar-track { background: #1a1a1a }

/* Fade animations */
.menu-fadeup { opacity: 0 ; transform: translateY(5px) }
.menu-fadeup.visible { opacity: 1 ; transform: translateY(0) ;
    transition: opacity 0.2s cubic-bezier(.165, .84, .44, 1),
        transform 0.5s cubic-bezier(.165, .84, .44, 1) }
.content-fadeup { opacity: 0 ; transform: translateY(20px) }
.content-fadeup.visible { opacity: 1 ; transform: translateY(0) ;
    transition: opacity 0.2s cubic-bezier(.165, .84, .44, 1) 0.15s,
        transform 0.5s cubic-bezier(.165, .84, .44, 1) 0.15s }
.content-faderight { opacity: 0 ; transform: translateX(-20px) }
.content-fadeleft { opacity: 0 ; transform: translateX(20px) }
.content-faderight.visible, .content-fadeleft.visible {
    opacity: 1 ; transform: translateX(0) ;
    transition: opacity 0.2s cubic-bezier(.165, .84, .44, 1) 0.15s,
        transform 0.5s cubic-bezier(.165, .84, .44, 1) 0.15s }

/* KudoAI logo */
#kudoai {
    position: fixed ; top: 15px ; left: 35px ;
    font-family: 'Major Mono Display' ; font-size: 2.25vw ; z-index: 500 ;
    @each $property, $value in $no-select { #{$property}: #{$value}; }}
#kudoai a { color: white ; text-decoration: none }
.kudo { font-size: 135% ; text-shadow: $kudo-depth $kudo-depth white ; padding-right: 4px }
#kudoai a:hover .kudo, .kudo.hover {  /* slide 'kudo' + shadow circularly on hover */
    position: relative ; animation: circular-slide 1.8s linear infinite }
@keyframes circular-slide {
    0%, 100% { top: 0 ;  left: 0 ; text-shadow: $kudo-depth $kudo-depth }
    25% { top: 0 ; left: $kudo-depth ; text-shadow: -$kudo-depth $kudo-depth }
    50% { top: $kudo-depth ; left: $kudo-depth ; text-shadow: -$kudo-depth (-$kudo-depth) }
    75% { top: $kudo-depth ; left: 0 ; text-shadow: $kudo-depth (-$kudo-depth) }
}

/* MEDIA QUERIES */

/* Tablet and below */
@media (max-width: 768px) {
    #kudoai {
        font-size: 5vw; /* Scale font size for smaller screens */
        left: 20px; /* Adjust position */
    }
    .top-gradient {
        height: 25vh; /* Increase gradient height for better visibility */
    }
}

/* Mobile */
@media (max-width: 480px) {
    #kudoai {
        font-size: 7vw; /* Further scale font size */
        top: 10px; /* Adjust top position */
    }
    .app-nav a.active {
        border-bottom: 2px solid $blue; /* Adjust active border color for contrast */
    }
    .content-fadeup, .content-faderight, .content-fadeleft {
        opacity: 1;
        transform: none; /* Simplify animations on smaller screens */
        transition: none; /* Remove transition for performance */
    }
}
/* GitHub badge */
.github-corner { z-index: 5 }
.github-corner svg { fill: white; color: black; height: 115px; width: 115px }

/* Starry background (from `../../js/src/starry-background.js`) */
canvas { position: fixed; width: 100%; height: 100%; pointer-events: none }

/* COVER */
.cover-main > img { margin-bottom: 16px; width: 98% }
.cover-main { color: white }
section.cover p {
    font-family: 'Major Mono Display', 'IBM Plex Mono', 'Roboto Mono', Monaco, courier, monospace !important;
    font-size: 1.75rem !important; font-weight: bold; margin-bottom: 48px; line-height: 2.3rem !important;
}
@media (max-width: 768px) {
    section.cover p { font-size: 1.5rem; line-height: 2rem; }
}

/* Buttons */
.cover-main > p:last-child a {
    font-family: 'IBM Plex Mono', 'Roboto Mono', Monaco, courier, monospace !important;
    text-transform: uppercase; font-size: 1.35rem !important; color: white !important;
    border-width: 3px !important; border-radius: 0 !important; border-color: white !important;
    padding: 16px 68px !important; transition: 0.04s !important;
    @each $property, $value in $no-select { #{$property}: #{$value}; }
    @each $property, $value in $no-touch-select { #{$property}: #{$value}; }
}
@media (max-width: 768px) {
    .cover-main > p:last-child a { font-size: 1.2rem; padding: 12px 50px; }
}
.cover-main > p:last-child a:hover { background-color: blue; color: white !important; opacity: 1 !important }
.cover-main > p:last-child a:last-child { padding: 16px 60px !important; border-color: white !important; font-weight: bold; background-color: white !important; color: black !important }
.cover-main > p:last-child a:last-child:hover { background-color: blue !important; border-color: blue !important; color: white !important }

/* NAV */
.app-nav { right: 35px; top: 15px }
.app-nav a { color: white !important; font-size: 1.5rem }
@media (max-width: 768px) {
    .app-nav a { font-size: 1.2rem; }
}

/* LANGUAGE SELECTOR */
#language-selector { position: relative; top: -25px; right: 32px }
#language-selector svg { position: relative; top: 9px; right: 9px; cursor: pointer }
#language-selector a { font-size: 30px }
#language-selector li { width: 88%; margin-right: unset }
#language-menu {
    display: none; position: absolute; top: 127%; right: -49px;
    width: 256px; height: 87vh; overflow: scroll; font-size: 28px !important; text-align: left;
    background: rgba(0, 0, 0, 0.75); border: 3px solid #cccccc; border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); padding: 5px 0; z-index: 1;
}
@media (max-width: 768px) {
    #language-menu { width: 200px; font-size: 24px; }
}

/* SIDEBAR */
.sidebar-toggle { bottom: 36px; left: 29px; background-color: transparent;
    @each $property, $value in $no-touch-select { #{$property}: #{$value}; }
}
.sidebar-toggle:hover .sidebar-toggle-button { opacity: 1 }
.sidebar-toggle span { background-color: white; width: 20px; height: 3px; margin-bottom: 5px }
.sidebar { background-color: transparent; padding-right: 5px !important }
.sidebar-nav { padding-top: 20px }
.sidebar-nav > ul:first-of-type { margin-top: 5vh }
.sidebar a { font-size: 2.1rem !important; line-height: 3.8rem; color: white !important }
.sidebar li.active > a { border-right: 0 !important }
.sidebar li.nav-active { border-right: 4px solid $green; padding-right: 15px }
.sidebar ul > ul { margin: 0 0 12px 26px }
@media (max-width: 768px) {
    .sidebar a { font-size: 1.6rem; line-height: 3rem; }
    .sidebar li.nav-active { padding-right: 10px; }
}

/* MAIN */
body {
    background: black; color: white; cursor: url('../../cursors/futuristic/pointer.cur'), auto;
    font-family: 'PolySans Neutral', 'Source Sans Pro', 'Helvetica Neue', Arial, sans-serif;
}
strong, .anchor span { color: white !important }
main a { color: $blue !important }
main h2 {
    text-align: center; margin: 8.4rem 0 5rem !important; font-size: 6rem !important;
    font-family: 'Eurostile Extended Black', Georgia, Cambria, Times New Roman, Times, serif;
    text-transform: uppercase;
}
@media (max-width: 768px) {
    main h2 { font-size: 4rem; }
}
main p { font-size: 1.78rem !important; line-height: 2.65rem !important }
@media (max-width: 768px) {
    main p { font-size: 1.5rem; line-height: 2.3rem; }
}

/* Code */
main pre { width: 100%; margin: 65px 0 !important }
main code { line-height: 2.1rem !important }
@media (max-width: 768px) {
    main code { font-size: 1.2rem; }
}
main pre, main code, .punctuation {
    font-family: 'Roboto Mono', Monaco, courier, monospace !important;
    position: relative; font-size: 1.35rem !important; color: white !important;
    background: rgba(0, 0, 0, 0.35) !important; margin-bottom: 1px;
}
main pre code { border: $blue 2px solid; border-radius: 12px !important; padding: 26px !important }
@media (max-width: 768px) {
    main pre code { padding: 20px; }
}
main p code {
    font-size: 1.3rem !important; position: relative; bottom: 2px;
    padding: 2px 12px 5px !important; margin: 0 5px !important;
    word-break: break-word; border: white 1px solid; border-radius: 8px !important;
}
@media (max-width: 768px) {
    main p code { font-size: 1.1rem; padding: 2px 8px 4px; }
}

/* Shields */
#shields { margin: 125px 0 305px }
#shields img { height: 48px; margin: 4px -2px }
@media (max-width: 768px) {
    #shields img { height: 36px; }
}
/* Usage section */
#usage ~ pre + p { /* 1st p after pre */
    text-align: left !important; margin: 65px 0 0 !important;
}
#usage ~ pre + p + p { /* 2nd p after pre */
    text-align: right !important; float: right !important; margin-bottom: 152px;
}
@media (max-width: 768px) {
    #usage ~ pre + p, #usage ~ pre + p + p {
        text-align: center !important; float: none !important; margin-bottom: 80px;
    }
}

/* Showcase */
#showcase ~ h3:nth-of-type(even):not(#contributors ~ *),
#showcase ~ h3 + p:nth-of-type(even):not(#contributors ~ *) { 
    text-align: right; 
}
#showcase ~ h3 + p + p:not(#contributors ~ *), /* 1st showcase tile */
#showcase ~ h3 + p + p ~ p:not(#contributors ~ *) { /* 2nd+ showcase tiles + CTA */
    text-align: center !important; 
}
#showcase-cta {
    font-size: 2.5rem !important; line-height: 3.5rem !important;
    padding: 0 10vw; margin-top: -29px;
}
main h3 img { /* app icons */
    height: 39px !important; width: auto !important; margin: 0 19px -2px 0;
}
main h3 a { /* app titles */
    text-decoration: none; color: white !important;
}
main h3 a:hover { text-decoration: underline #42b983; }
img[src*='promo-tile'] { width: 74vw; border: 1px solid white; margin: 32px 0; }
a[href*='mailto:showcase'] { word-break: keep-all; }
@media (max-width: 768px) {
    #showcase ~ h3, #showcase ~ h3 + p { text-align: center !important; }
    img[src*='promo-tile'] { width: 100% !important; }
}

/* Contributors */
#contributors, #contributors ~ p { text-align: center !important; }
#contributors ~ p { padding: 0 15vw; }
#contributors + p { /* contributors description */
    font-family: 'IBM Plex Mono', 'Roboto Mono', Monaco, courier, monospace !important;
    font-size: 1.7rem !important; padding: 0 12vw;
}
#contributors ~ * img:not(#partners ~ * *) { width: 5.5vw; }
a[href='https://chat.openai.com'] img { /* outline ChatGPT's avatar */
    border: 2px solid #aeecff; border-radius: 50%;
}
#contributors ~ br { display: none; }
@media (max-width: 768px) {
    #contributors + p { font-size: 1.5rem !important; padding: 0 5px !important; }
    #contributors ~ p { padding: 0 !important; }
    #contributors ~ * img { width: 69px !important; }
}

/* Footer */
#partners + p { font-size: 2rem !important; padding: 0; }
#partners-collage img { margin-top: 17px; width: 100%; opacity: 0.6; }
#star-history { display: none; }
#footer { text-align: center; margin: -96px 0 -105px; }
#mc_embed_signup h2 {
    margin: 3rem 0 3.5rem !important;
    font-size: 2.68rem !important; color: white; -webkit-text-stroke: 1px black;
}
.mc-field-group { margin: -4px 0 95px; }
.mc-field-group input { height: 55px; }
input#mce-EMAIL {
    border-radius: 0; width: 32%; min-width: 250px;
    margin-bottom: 18px; border: 1px solid #ccc; outline: none;
}
input#mce-EMAIL, input#mce-EMAIL::placeholder { font-size: 1.55rem; text-indent: 15px; }
#mc-embedded-subscribe {
    font-size: 1.45rem; color: white; background: black; cursor: pointer;
    width: 200px; margin-left: -6px; border-radius: 0; border: 1px solid white;
    position: relative; bottom: 1px;
}
@media (max-width: 768px) {
    input#mce-EMAIL { width: 90%; text-align: center; }
    #mc_embed_signup h2 { font-size: 2.5rem; }
}

/* BUTTONS */
.back-to-top {
    margin: 0; padding: 0; border: none; cursor: pointer;
    outline: none; width: fit-content; height: fit-content;
    background: none; position: fixed; bottom: 5%;
    right: 3%; display: none; opacity: 0;
    @each $property, $value in $no-touch-select { #{$property}: #{$value}; }
}
.back-to-top svg > path { fill: #fff; }

@media (max-width: 768px) {
    .back-to-top { bottom: 39px; right: 10px; }
}
